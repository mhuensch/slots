app.factory('authInterceptorService', ['$q', '$location', 'localStorageService', '$injector', 'authSettings', function ($q, $location, localStorageService, $injector, authSettings) {

	var last = "";

	var authInterceptorServiceFactory = {

		request: function (config) {

			config.headers = config.headers || {};

			var authData = localStorageService.get(authSettings.storageName);
			if (authData) {
				config.headers.Authorization = 'Bearer ' + authData.token;
			}

			return config;
		},

		responseError: function (rejection) {
			if ($location.$$path !== "/login") {
				last = $location.$$path;
			}
			
			if (rejection.status === 401) {

				var authService = $injector.get('authService');
				var authData = localStorageService.get(authSettings.storageName);
			
				authService.logOut();
				$location.path('/login').search({ redirect: last });

			}
			return $q.reject(rejection);
		}

	};

	return authInterceptorServiceFactory;

}]).config(['$httpProvider', function ($httpProvider) {

	$httpProvider.interceptors.push('authInterceptorService');

}]);